const o=location.pathname.split("/").slice(0,-1).join("/"),x=[o+"/_app/immutable/entry/app._X1lZRpQ.js",o+"/_app/immutable/nodes/0.oum0So-Y.js",o+"/_app/immutable/assets/0.DS1Li46e.css",o+"/_app/immutable/nodes/1.CDM6oaW0.js",o+"/_app/immutable/nodes/2.CLfpvndl.js",o+"/_app/immutable/nodes/3.Y4XnMbYk.js",o+"/_app/immutable/nodes/4.q7ZKn0lr.js",o+"/_app/immutable/nodes/5.BBh570Dj.js",o+"/_app/immutable/assets/QrCodeScanningDialog.C0--ecQD.css",o+"/_app/immutable/chunks/BFDY3ytW.js",o+"/_app/immutable/chunks/Bc4uQV8d.js",o+"/_app/immutable/chunks/BkWxgEoN.js",o+"/_app/immutable/chunks/C1v8ui9N.js",o+"/_app/immutable/chunks/CW5OsCRc.js",o+"/_app/immutable/chunks/CdilF6c4.js",o+"/_app/immutable/chunks/CjbS4D6L.js",o+"/_app/immutable/chunks/DYCSOikh.js",o+"/_app/immutable/chunks/DZcZIQ4t.js",o+"/_app/immutable/chunks/DbJaMY4O.js",o+"/_app/immutable/chunks/DkyGT7kw.js",o+"/_app/immutable/chunks/Dtkc5tKY.js",o+"/_app/immutable/chunks/DuVon3fq.js",o+"/_app/immutable/chunks/DygEgwVl.js",o+"/_app/immutable/chunks/N4LhOoPa.js",o+"/_app/immutable/chunks/eBBfgSPd.js",o+"/_app/immutable/chunks/eXYN6l5q.js",o+"/_app/immutable/chunks/xzJQou2i.js",o+"/_app/immutable/entry/start.tBjNMEB5.js"],D=[o+"/favicon.png",o+"/fonts/material-icons-v139.woff2",o+"/fonts/material-icons.css",o+"/lib/koder-browser.js",o+"/lib/wasmQrWorker.js",o+"/lib/zbar.js",o+"/lib/zbar.wasm",o+"/smui.css"],I=[o+"/",o+"/login",o+"/on-field",o+"/setup"],P="1742427835649";try{self["workbox:core:7.2.0"]&&_()}catch{}const O=(a,...e)=>{let t=a;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},M=O;class h extends Error{constructor(e,t){const s=M(e,t);super(s),this.name=e,this.details=t}}const d={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},U=a=>[d.prefix,a,d.suffix].filter(e=>e&&e.length>0).join("-"),S=a=>{for(const e of Object.keys(d))a(e)},k={updateDetails:a=>{S(e=>{typeof a[e]=="string"&&(d[e]=a[e])})},getGoogleAnalyticsName:a=>a||U(d.googleAnalytics),getPrecacheName:a=>a||U(d.precache),getPrefix:()=>d.prefix,getRuntimeName:a=>a||U(d.runtime),getSuffix:()=>d.suffix};function j(a,e){const t=e();return a.waitUntil(t),t}try{self["workbox:precaching:7.2.0"]&&_()}catch{}const W="__WB_REVISION__";function A(a){if(!a)throw new h("add-to-cache-list-unexpected-type",{entry:a});if(typeof a=="string"){const c=new URL(a,location.href);return{cacheKey:c.href,url:c.href}}const{revision:e,url:t}=a;if(!t)throw new h("add-to-cache-list-unexpected-type",{entry:a});if(!e){const c=new URL(t,location.href);return{cacheKey:c.href,url:c.href}}const s=new URL(t,location.href),n=new URL(t,location.href);return s.searchParams.set(W,e),{cacheKey:s.href,url:n.href}}class q{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const n=t.originalRequest.url;s?this.notUpdatedURLs.push(n):this.updatedURLs.push(n)}return s}}}class F{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const n=(s==null?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return n?new Request(n,{headers:t.headers}):t},this._precacheController=e}}let y;function H(){if(y===void 0){const a=new Response("");if("body"in a)try{new Response(a.body),y=!0}catch{y=!1}y=!1}return y}async function B(a,e){let t=null;if(a.url&&(t=new URL(a.url).origin),t!==self.location.origin)throw new h("cross-origin-copy-response",{origin:t});const s=a.clone(),c={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=H()?s.body:await s.blob();return new Response(i,c)}const Q=a=>new URL(String(a),location.href).href.replace(new RegExp(`^${location.origin}`),"");function N(a,e){const t=new URL(a);for(const s of e)t.searchParams.delete(s);return t.href}async function V(a,e,t,s){const n=N(e.url,t);if(e.url===n)return a.match(e,s);const c=Object.assign(Object.assign({},s),{ignoreSearch:!0}),i=await a.keys(e,c);for(const r of i){const l=N(r.url,t);if(n===l)return a.match(r,s)}}class G{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const Y=new Set;async function $(){for(const a of Y)await a()}function z(a){return new Promise(e=>setTimeout(e,a))}try{self["workbox:strategies:7.2.0"]&&_()}catch{}function b(a){return typeof a=="string"?new Request(a):a}class Z{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new G,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=b(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const i=await t.preloadResponse;if(i)return i}const n=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const i of this.iterateCallbacks("requestWillFetch"))s=await i({request:s.clone(),event:t})}catch(i){if(i instanceof Error)throw new h("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}const c=s.clone();try{let i;i=await fetch(s,s.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const r of this.iterateCallbacks("fetchDidSucceed"))i=await r({event:t,request:c,response:i});return i}catch(i){throw n&&await this.runCallbacks("fetchDidFail",{error:i,event:t,originalRequest:n.clone(),request:c.clone()}),i}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=b(e);let s;const{cacheName:n,matchOptions:c}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},c),{cacheName:n});s=await caches.match(i,r);for(const l of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await l({cacheName:n,matchOptions:c,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,t){const s=b(e);await z(0);const n=await this.getCacheKey(s,"write");if(!t)throw new h("cache-put-with-no-response",{url:Q(n.url)});const c=await this._ensureResponseSafeToCache(t);if(!c)return!1;const{cacheName:i,matchOptions:r}=this._strategy,l=await self.caches.open(i),u=this.hasCallback("cacheDidUpdate"),m=u?await V(l,n.clone(),["__WB_REVISION__"],r):null;try{await l.put(n,u?c.clone():c)}catch(f){if(f instanceof Error)throw f.name==="QuotaExceededError"&&await $(),f}for(const f of this.iterateCallbacks("cacheDidUpdate"))await f({cacheName:i,oldResponse:m,newResponse:c.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const c of this.iterateCallbacks("cacheKeyWillBeUsed"))n=b(await c({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const s=this._pluginStateMap.get(t);yield c=>{const i=Object.assign(Object.assign({},c),{state:s});return t[e](i)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class J{constructor(e={}){this.cacheName=k.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,n="params"in e?e.params:void 0,c=new Z(this,{event:t,request:s,params:n}),i=this._getResponse(c,s,t),r=this._awaitComplete(i,c,s,t);return[i,r]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let n;try{if(n=await this._handle(t,e),!n||n.type==="error")throw new h("no-response",{url:t.url})}catch(c){if(c instanceof Error){for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:c,event:s,request:t}),n)break}if(!n)throw c}for(const c of e.iterateCallbacks("handlerWillRespond"))n=await c({event:s,request:t,response:n});return n}async _awaitComplete(e,t,s,n){let c,i;try{c=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:c}),await t.doneWaiting()}catch(r){r instanceof Error&&(i=r)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:c,error:i}),t.destroy(),i)throw i}}class p extends J{constructor(e={}){e.cacheName=k.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(p.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const n=t.params||{};if(this._fallbackToNetwork){const c=n.integrity,i=e.integrity,r=!i||i===c;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?i||c:void 0})),c&&r&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}else throw new h("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new h("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==p.copyRedirectedCacheableResponsesPlugin&&(n===p.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);t===0?this.plugins.push(p.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}p.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:a}){return!a||a.status>=400?null:a}};p.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:a}){return a.redirected?await B(a):a}};class X{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new p({cacheName:k.getPrecacheName(e),plugins:[...t,new F({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:n,url:c}=A(s),i=typeof s!="string"&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(c)&&this._urlsToCacheKeys.get(c)!==n)throw new h("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(c),secondEntry:n});if(typeof s!="string"&&s.integrity){if(this._cacheKeysToIntegrities.has(n)&&this._cacheKeysToIntegrities.get(n)!==s.integrity)throw new h("add-to-cache-list-conflicting-integrities",{url:c});this._cacheKeysToIntegrities.set(n,s.integrity)}if(this._urlsToCacheKeys.set(c,n),this._urlsToCacheModes.set(c,i),t.length>0){const r=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(r)}}}install(e){return j(e,async()=>{const t=new q;this.strategy.plugins.push(t);for(const[c,i]of this._urlsToCacheKeys){const r=this._cacheKeysToIntegrities.get(i),l=this._urlsToCacheModes.get(c),u=new Request(c,{integrity:r,cache:l,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:i},request:u,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}})}activate(e){return j(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),n=new Set(this._urlsToCacheKeys.values()),c=[];for(const i of s)n.has(i.url)||(await t.delete(i),c.push(i.url));return{deletedURLs:c}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new h("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let L;const v=()=>(L||(L=new X),L);try{self["workbox:routing:7.2.0"]&&_()}catch{}const T="GET",C=a=>a&&typeof a=="object"?a:{handle:a};class g{constructor(e,t,s=T){this.handler=C(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=C(e)}}class ee extends g{constructor(e,t,s){const n=({url:c})=>{const i=e.exec(c.href);if(i&&!(c.origin!==location.origin&&i.index!==0))return i.slice(1)};super(n,t,s)}}class te{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(n=>{typeof n=="string"&&(n=[n]);const c=new Request(...n);return this.handleRequest({request:c,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:c,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let r=i&&i.handler;const l=e.method;if(!r&&this._defaultHandlerMap.has(l)&&(r=this._defaultHandlerMap.get(l)),!r)return;let u;try{u=r.handle({url:s,request:e,event:t,params:c})}catch(f){u=Promise.reject(f)}const m=i&&i.catchHandler;return u instanceof Promise&&(this._catchHandler||m)&&(u=u.catch(async f=>{if(m)try{return await m.handle({url:s,request:e,event:t,params:c})}catch(K){K instanceof Error&&(f=K)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw f})),u}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const c=this._routes.get(s.method)||[];for(const i of c){let r;const l=i.match({url:e,sameOrigin:t,request:s,event:n});if(l)return r=l,(Array.isArray(r)&&r.length===0||l.constructor===Object&&Object.keys(l).length===0||typeof l=="boolean")&&(r=void 0),{route:i,params:r}}return{}}setDefaultHandler(e,t=T){this._defaultHandlerMap.set(t,C(e))}setCatchHandler(e){this._catchHandler=C(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new h("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new h("unregister-route-route-not-registered")}}let w;const se=()=>(w||(w=new te,w.addFetchListener(),w.addCacheListener()),w);function E(a,e,t){let s;if(typeof a=="string"){const c=new URL(a,location.href),i=({url:r})=>r.href===c.href;s=new g(i,e,t)}else if(a instanceof RegExp)s=new ee(a,e,t);else if(typeof a=="function")s=new g(a,e,t);else if(a instanceof g)s=a;else throw new h("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return se().registerRoute(s),s}function ae(a,e=[]){for(const t of[...a.searchParams.keys()])e.some(s=>s.test(t))&&a.searchParams.delete(t);return a}function*ne(a,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={}){const c=new URL(a,location.href);c.hash="",yield c.href;const i=ae(c,e);if(yield i.href,t&&i.pathname.endsWith("/")){const r=new URL(i.href);r.pathname+=t,yield r.href}if(s){const r=new URL(i.href);r.pathname+=".html",yield r.href}if(n){const r=n({url:c});for(const l of r)yield l.href}}class ce extends g{constructor(e,t){const s=({request:n})=>{const c=e.getURLsToCacheKeys();for(const i of ne(n.url,t)){const r=c.get(i);if(r){const l=e.getIntegrityForCacheKey(r);return{cacheKey:r,integrity:l}}}};super(s,e.strategy)}}function ie(a){const e=v(),t=new ce(e,a);E(t)}const re="-precache-",oe=async(a,e=re)=>{const s=(await self.caches.keys()).filter(n=>n.includes(e)&&n.includes(self.registration.scope)&&n!==a);return await Promise.all(s.map(n=>self.caches.delete(n))),s};function le(){self.addEventListener("activate",a=>{const e=k.getPrecacheName();a.waitUntil(oe(e).then(t=>{}))})}function he(a){return v().matchPrecache(a)}function ue(a){v().precache(a)}function fe(a,e){ue(a),ie(e)}class de extends g{constructor(e,{allowlist:t=[/./],denylist:s=[]}={}){super(n=>this._match(n),e),this._allowlist=t,this._denylist=s}_match({url:e,request:t}){if(t&&t.mode!=="navigate")return!1;const s=e.pathname+e.search;for(const n of this._denylist)if(n.test(s))return!1;return!!this._allowlist.some(n=>n.test(s))}}const R=self;let pe=D.filter(a=>!a.match(/\/\.\w+/g));const ge=["/dashboard/",...x,...pe,...I].map(a=>({url:a,revision:P}));fe(ge,{cleanURLs:!1});const me=new de(async({request:a})=>{const e=await he("/");return e||(console.error("Cached index html page not found!! Attempting to fetch."),fetch(a))});E(me);le();R.addEventListener("message",a=>{var e;a.data&&(a.data.msg==="SKIP_WAITING"&&(console.log("Received SKIP_WAITING instruction. Skipping wait..."),R.skipWaiting()),a.data.msg==="GET_VERSION"&&((e=a.source)==null||e.postMessage({msg:"RETURN_VERSION",version:P})))});R.addEventListener("activate",a=>{console.log("Received activate event. Claiming all clients..."),a.waitUntil(R.clients.claim().then(()=>{R.clients.matchAll().then(e=>e.forEach(t=>t.postMessage({msg:"UPDATE_DONE",version:P})))}))});
